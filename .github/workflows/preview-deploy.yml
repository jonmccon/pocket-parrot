# Workflow for deploying preview builds of copilot branches to GitHub Pages
name: Deploy preview for copilot branches

on:
  # Runs on pushes to any branch matching the copilot pattern
  push:
    branches: 
      - "copilot-*"
      - "copilot/*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  actions: write
  pull-requests: write

# Allow multiple concurrent preview deployments
concurrency:
  group: "preview-${{ github.ref_name }}"
  cancel-in-progress: true

jobs:
  # Preview deploy job for copilot branches
  preview-deploy:
    runs-on: ubuntu-latest
    environment:
      name: preview-${{ github.ref_name }}
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create preview info
        run: |
          # Create a preview info file to identify this as a preview build
          echo "Preview build for branch: ${{ github.ref_name }}" > preview-info.txt
          echo "Commit: ${{ github.sha }}" >> preview-info.txt
          echo "Built at: $(date)" >> preview-info.txt
          
          # Add a banner to index.html to indicate this is a preview
          BRANCH_NAME="${{ github.ref_name }}"
          COMMIT_SHA="${{ github.sha }}"
          sed -i "s|<title>.*</title>|<title>🔍 [PREVIEW] Pocket Parrot - ${BRANCH_NAME}</title>|" index.html
          
          # Add preview banner to the HTML
          sed -i "/<body[^>]*>/a\\
          <div style=\"background: #fbbf24; color: #92400e; padding: 8px; text-align: center; font-weight: bold; position: sticky; top: 0; z-index: 1000;\">\\
            🔍 PREVIEW BUILD - Branch: ${BRANCH_NAME} | Commit: ${COMMIT_SHA:0:7}\\
          </div>" index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create deployment summary
        run: |
          echo "## 🔍 Preview Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** \`preview-${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Direct Access" >> $GITHUB_STEP_SUMMARY
          echo "Your preview is now live at:" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **[${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✨ Features" >> $GITHUB_STEP_SUMMARY
          echo "- 🦜 Full Pocket Parrot functionality" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 Mobile sensor data capture" >> $GITHUB_STEP_SUMMARY
          echo "- 📷 Camera & object detection" >> $GITHUB_STEP_SUMMARY
          echo "- 🎤 Audio recording" >> $GITHUB_STEP_SUMMARY
          echo "- 🗺️ Interactive mapping" >> $GITHUB_STEP_SUMMARY
          echo "- 💾 Offline support" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Preview banner for easy identification" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR if applicable
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/copilot')
        uses: actions/github-script@v7
        with:
          script: |
            // Find PR for this branch
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });
            
            if (prs.length > 0) {
              const pr = prs[0];
              const comment = `🔍 **Preview deployment ready!**
              
              **Branch:** \`${{ github.ref_name }}\`
              **Environment:** \`preview-${{ github.ref_name }}\`
              
              ### 🌐 Direct Access:
              🔗 **[${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})**
              
              The preview is now live and includes a banner identifying it as a preview build. No download required!`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment
              });
            }